// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Proyecto.Entities.Entities;

#nullable disable

namespace Proyecto.DataAccess.Context
{
    public partial class CentrosmedicosdbContext : DbContext
    {
        public CentrosmedicosdbContext()
        {
        }

        public CentrosmedicosdbContext(DbContextOptions<CentrosmedicosdbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbAccesos> tbAccesos { get; set; }
        public virtual DbSet<tbEnfermo> tbEnfermo { get; set; }
        public virtual DbSet<tbHospiltales> tbHospiltales { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPlantilla> tbPlantilla { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSala> tbSala { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbAccesos>(entity =>
            {
                entity.HasKey(e => e.acce_Id);

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbAccesos)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbAccesos_tbPantallas");

                entity.HasOne(d => d.rol)
                    .WithMany(p => p.tbAccesos)
                    .HasForeignKey(d => d.rol_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbAccesos_tbAccesos");
            });

            modelBuilder.Entity<tbEnfermo>(entity =>
            {
                entity.HasKey(e => e.enfer_Inscripcioon)
                    .HasName("PK_tbEnfermo_planti_enfer_Inscripcioon");

                entity.Property(e => e.enfer_Apellido)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.enfer_Direccion)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.enfer_FechaNac).HasColumnType("date");

                entity.HasOne(d => d.planti_Empleado)
                    .WithMany(p => p.tbEnfermo)
                    .HasForeignKey(d => d.planti_EmpleadoId)
                    .HasConstraintName("FK_tbEnfermo_planti_EmpleadoId");
            });

            modelBuilder.Entity<tbHospiltales>(entity =>
            {
                entity.HasKey(e => e.hospi_Id)
                    .HasName("PK_tbHospiltales_hospi_Id");

                entity.Property(e => e.hospi_Nombre)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.hospi_Telefono)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<tbPlantilla>(entity =>
            {
                entity.HasKey(e => e.planti_EmpleadoId)
                    .HasName("PK_tbPlantilla_planti_EmpleadoId");

                entity.Property(e => e.planti_Apellido)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.planti_Funcion)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.planti_Turno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.hospi)
                    .WithMany(p => p.tbPlantilla)
                    .HasForeignKey(d => d.hospi_Id);

                entity.HasOne(d => d.sala)
                    .WithMany(p => p.tbPlantilla)
                    .HasForeignKey(d => d.sala_Id);
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.rol_Id)
                    .HasName("PK_gral_tbRoles_rol_ID");

                entity.Property(e => e.rol_Descripcion)
                    .IsRequired()
                    .HasMaxLength(400);

                entity.Property(e => e.rol_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<tbSala>(entity =>
            {
                entity.HasKey(e => e.sala_Id)
                    .HasName("PK_tbSala_sala_Id");

                entity.Property(e => e.sala_Nombre)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.HasOne(d => d.hospi)
                    .WithMany(p => p.tbSala)
                    .HasForeignKey(d => d.hospi_Id);
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usu_ID)
                    .HasName("PK_dbo_tbUsuarios_usu_ID");

                entity.Property(e => e.usu_Apellido)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.usu_Email)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usu_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.usu_NumeroCelular)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.usu_NumeroTelefono)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.usu_Password)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.usu_PasswordSalt)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.rol_ID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbUsuarios_tbRoles_role_Id");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}